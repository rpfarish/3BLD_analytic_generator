#print(convert_letterpairs(drill.get_all_buffer_targets("UFL", 'corners'), 'loc_to_letters', 'corners'))
    # drill.drill_edge_sticker(sticker_to_drill="FD", single_cycle=True, return_list=False,
    #                          cycles_to_exclude=
    #                          {'FDRB', 'FDDB', 'FDDL', 'FDFR', 'FDLF', 'FDBR', 'FDBL', 'FDBU', 'FDRU', 'FDLU', 'FDUL',
    #                           'FDLD', 'FDUR', 'FDBD', 'FDUB', 'FDFL', 'FDLB', 'FDRD', 'FDRF'}
    #                          )

    # memo = drill.generate_random_edge_memo("UF", translate_memo=True)

    # print(memo)
    # drill.drill_edge_buffer("UB", exclude_from_memo=set(), return_list=False)
    # drill.drill_edge_sticker("DB", invert=True)
    # algs = {'BDLF', 'RBUL', 'RDRF', 'BULF', 'BDFD', 'FLFR', 'BRLF', 'DLRF', 'UBBL', 'RULD',
    #         'BUUR', 'RFUL', 'FLLD', 'URRF', 'LDLB', 'UBFD', 'RUDL', 'RFBL', 'LDBU', 'ULFL',
    #         }
#     algs = convert_letterpairs(
#         [
#             "LG", "BP", "AI", "SO", "HG", "GL", "ZX", "XV", "NX", "VW", "OG", "XS", "CB",
#             "SR", "GW", "IZ", "PS", "DB", "NJ", "CZ", "FW", "GT", "OJ"
#         ],
#         direction="letter_to_loc", piece_type="edges"
#     )
#     # "OJ",
#     print(algs)
#     print(len(algs))
#     # buffer = "UFR"
#     # result = ''
#     # print(result)
#     # drill.drill_corner_buffer('UBL')
#     drill.drill_edge_buffer("DL", translate_memo=True)
#     # drill.drill_edge_sticker("DB", algs=algs, single_cycle=False)
#
#     # # max_num = drill.max_cycles_per_buffer
#     # # print(max_num)
#
#     algs = {'UR': 'RU', 'UL': 'LU', 'LU': 'UL', 'LF': 'FL', 'LD': 'DL', 'LB': 'BL', 'FR': 'RF', 'FD': 'DF', 'FL': 'LF',
#             'RU': 'UR', 'RB': 'BR', 'RD': 'DR', 'RF': 'FR', 'BL': 'LB', 'BD': 'DB', 'BR': 'RB', 'DF': 'FD', 'DR': 'RD',
#             'DB': 'BD', 'DL': 'LD'}
#
#     # print(len(list(permutations(algs, 2))))
#     # print(permutations(algs, 2))
#     # UB 2:08:00.00
#     # UB   53:00.00
#     # UL 1:40.59.77
#
# # UL: ON GH OJ OR JN NO XI HJ IT HI WV LJ IH HS TV PR
#
# # NL ?
# # TV last U last move R U R U' R' U' R' U' R U
# # RP L u L' OR U'
# # FW l u' L
# # VT no AUF
# # NF u' R' U' R
# # SO r' might be better than MUD
# # RJ U' L' U L'
# # CV R2 U'
# # GN U' F R'
# # CS l' M' RH
# # VW R2 U'
# # PH u'
# # LJ U' L
# # JL U' R'
# # JH u R2'
# # IF M' U2
# # LH U' LH regrip
# # TI F' R
# # FT U'
# # IS U2
# # SI U2
# # TH U
# # XV S L2' S' L2
# # TP U' R'
# DL_comms = [
#     "ON",
#     "GH",
#     "OJ",
#     "OR",
#     "JN",
#     "NO",
#     "XI",
#     "HJ",
#     "IT",
#     "HI",
#     "WV",
#     "LJ",
#     "IH",
#     "HS",
#     "TV",
#     "PR ",
#     "NL",
#     "TV",
#     "RP",
#     "FW",
#     "VT",
#     "NF",
#     "SO",
#     "RJ",
#     "CV",
#     "GN",
#     "CS",
#     "VW",
#     "PH",
#     "LJ",
#     "JL",
#     "JH",
#     "IF",
#     "LH",
#     "TI",
#     "FT",
#     "IS",
#     "SI",
#     "TH",
#     "XV",
#     "TP",
# ]
# # UBL
# """
# DK, LH, EZ, TC, DC, FW, VE, HL, CH, SE, EG, ZE, WP, EP, PS, SC
# GO D2'
# U2 R2' U' R2 D R2' U R2 U' R2' D' R2 U': U2 U' D
# ZL D2'
# LT KS D2'
# GV U
# OG D' U'
# GH D' R' D' R D R' U R D' R' U' D R D:   D' R' UBR AS
# PH PEACH D R' U R D2' R' U' R D2 D'
# PC D R D' L2' D R' D' L2
# HG <RUL> or <RUD> ??
# PW D
# VG U
# ZG D'
# PE U' FK
# GP U
# GS D2'
# SD D'
# LZ: D' R2 U'
# WE U'D'
# """
# #
# # from itertools import permutations
# #
# # algs = permutations(['C', 'D', 'E', 'F', 'G', 'H', 'K', 'L', 'O', 'P', 'S', 'T', 'V', 'W', 'Z'], r=2)
# # algs = list(algs)
# # print(algs)
# # print(len(algs))
# # b = [i + j for i, j in algs]
# # print(set(b))
#
# # DL
# # NR R' E' R E R S' R' S
# # RN S' R S R' E' R' E R  you can also do it with wide Rs
#
#
# # DL 1:42.84
# # DL 1:00.83
# # DL 1:05.94
# # DL   59.09
# # DL   51.51 did i actually do all the cases tho
# # DL   51.79
# # DL   50.30
# # DL   47.76
# # DL   47.82
# # DL   43.70 (5.46 per case)
#
#
# # DR 7:36
# # DR 6:54.06
# # DR 5:08.67
# # DR 3:37.48
# # DR 4:08.39
# # DR 3:07.88
# # DR 3:45.56
# # DR 2:44.34
# # DR 3:04.97
# # DR 2:43.51
# # DR 2:43.14
# # DR 2:23.99 5.999583333333333
# # DR 2:24.63
#
# # DB 35:46.151
#
# # 2 flips 1824.52 33:24.52
#
# # FR 6:41.75
